<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.aissue" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--<import resource="classpath:spring/spring-dubbo.xml"/>-->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="500"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="50"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>
    <bean id="messageListener"
          class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <constructor-arg>
            <bean class="com.aissue.service.impl.MyRedisKeyExpiredMessageDelegate" />
        </constructor-arg>
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <!-- 连接池配置. -->
        <property name="poolConfig" ref="jedisPoolConfig" />
        <!-- Redis服务主机. -->
        <property name="hostName" value="59.202.43.113" />
        <!-- Redis服务端口号. -->
        <property name="port" value="6379" />
        <!-- Redis服务连接密码. -->
        <!-- <property name="password" value="${redis.password}" /> -->
        <!-- 连超时设置. -->
        <property name="timeout" value="15000" />
        <!-- 是否使用连接池. -->
        <property name="usePool" value="true" />
    </bean>
    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="messageListeners">
            <map>
                <entry key-ref="messageListener">
                    <list>
                        <bean class="org.springframework.data.redis.listener.ChannelTopic">
                            <constructor-arg value="__keyevent@3__:expired" />
                        </bean>
                    </list>
                </entry>
            </map>
        </property>
    </bean>

    <!--<context:property-placeholder ignore-unresolvable="true" location="classpath*:/spring/dbconfig.properties" />-->
    <!--<util:properties id="settings" location="classpath:spring/redis.properties"/>-->
    <!-- 数据库参数配置 -->
    <!--<import resource="classpath*:/spring/spring-datasource.xml"/>-->
</beans>